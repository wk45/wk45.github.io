## Mermaid

```{mermaid}

%%| fig-height: 5
%%{
init: {
  "flowchart": {"nodeSpacing": 10, "rankSpacing": 20, "useMaxWidth": "true", "htmlLabels": "true", "curve": 'cardinal'},
  "securityLevel": "loose",
  "themeVariables": { 'primaryColor': '#BB2528',
                      'primaryTextColor': '#fff',
                      'primaryBorderColor': '#7C0000',
                      'lineColor': '#F8B229',
                      'secondaryColor': '#006100',
                      'tertiaryColor': '#fff'},
  "theme": "base",
    "themeCSS": ".extension { fill: white !important; };.divider { display: none; };"
    
}}%%
flowchart LR
    subgraph A[Data Prep]
        direction TB
        A1["Start with functions $${\hat{g}_\lambda}$$"]
        A2[Apply PCA for dimensionality reduction]
        A1 --> A2
    end

    subgraph B[Trajectory Smoothing]
        direction TB
        B1[Obtain raw trajectory in PC space]
        B2[Correct local misalignments]
        B3["Fit principal curve $$S$$"]
        B1 --> B2 --> B3
    end

    subgraph C[Analysis]
        direction TB
        C1["Parameterize $$S \text{ as } \mathbf{s}(\xi)$$"]
        C2["Align trajectory points to $$S$$"]
        C3[Derive smooth trajectory]
        C4["Estimate density on $$S$$"]
        C5[Identify high-density stable regions]
        C1 --> C2 --> C3 --> C4 --> C5
    end

    subgraph D[Optimization]
        direction TB
        D1["Select optimal $$\lambda \text{ with max early density}$$"]
        D2["Refine upper bound for $$\lambda \text{ using } \mathbf{R}$$"]
        D1 --> D2
    end

    A --> B --> C--> D

```